Index: be/controllers/auth.controller.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controllers\r\n\r\nimport (\r\n\t\"github.com/dgrijalva/jwt-go\"\r\n\t\"github.com/go-playground/validator/v10\"\r\n\t\"github.com/gofiber/fiber/v2\"\r\n\t\"logbook_ta/database\"\r\n\t\"logbook_ta/models/request\"\r\n\t\"logbook_ta/utils\"\r\n\t\"time\"\r\n)\r\n\r\nfunc LoginController(ctx *fiber.Ctx) error {\r\n\tloginRequest := new(request.UserLoginRequest)\r\n\r\n\t// PARSE REQUEST BODY\r\n\tif errParse := ctx.BodyParser(&loginRequest); errParse != nil {\r\n\t\treturn ctx.Status(400).JSON(fiber.Map{\r\n\t\t\t\"message\": \"fail to parsing data\",\r\n\t\t\t\"error\":   errParse.Error(),\r\n\t\t})\r\n\t}\r\n\t// VALIDATION REQUEST DATA\r\n\tvalidate := validator.New()\r\n\tif errValidate := validate.Struct(loginRequest); errValidate != nil {\r\n\t\treturn ctx.Status(400).JSON(fiber.Map{\r\n\t\t\t\"message\": \"some data is not valid\",\r\n\t\t\t\"error\":   errValidate.Error(),\r\n\t\t})\r\n\t}\r\n\t// CHECK VALIDATION USER DATA\r\n\tvar user request.UserLoginRequest\r\n\tif err := database.DB.First(&user, \"username = ?\", loginRequest.Username).Error; err != nil {\r\n\t\treturn ctx.Status(fiber.StatusUnauthorized).JSON(fiber.Map{\r\n\t\t\t\"message\": \"wrong credentials\",\r\n\t\t})\r\n\t}\r\n\r\n\t// CHECK VALIDATION PASSWORD DATA\r\n\tisValid := utils.CheckPasswordHash(loginRequest.Password, user.Password)\r\n\tif !isValid {\r\n\t\treturn ctx.Status(fiber.StatusUnauthorized).JSON(fiber.Map{\r\n\t\t\t\"message\": \"wrong credentials\",\r\n\t\t})\r\n\t}\r\n\r\n\t// GENERATE TOKEN\r\n\tclaims := jwt.MapClaims{}\r\n\tclaims[\"name\"] = user.Username\r\n\tclaims[\"password\"] = user.Password\r\n\tclaims[\"exp\"] = time.Now().Add(time.Minute * 2).Unix()\r\n\r\n\ttoken, err := utils.GenerateToken(&claims)\r\n\tif err != nil {\r\n\t\treturn ctx.Status(fiber.StatusUnauthorized).JSON(fiber.Map{\r\n\t\t\t\"message\": \"wrong credentials\",\r\n\t\t})\r\n\t}\r\n\r\n\treturn ctx.JSON(fiber.Map{\r\n\t\t\"token\": token,\r\n\t})\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/be/controllers/auth.controller.go b/be/controllers/auth.controller.go
--- a/be/controllers/auth.controller.go	(revision af4703cca1d308241a236a8575fdc0f0df56af36)
+++ b/be/controllers/auth.controller.go	(date 1685723613621)
@@ -5,6 +5,7 @@
 	"github.com/go-playground/validator/v10"
 	"github.com/gofiber/fiber/v2"
 	"logbook_ta/database"
+	"logbook_ta/models/entity"
 	"logbook_ta/models/request"
 	"logbook_ta/utils"
 	"time"
@@ -29,10 +30,10 @@
 		})
 	}
 	// CHECK VALIDATION USER DATA
-	var user request.UserLoginRequest
+	var user entity.User
 	if err := database.DB.First(&user, "username = ?", loginRequest.Username).Error; err != nil {
 		return ctx.Status(fiber.StatusUnauthorized).JSON(fiber.Map{
-			"message": "wrong credentials",
+			"message": "wrong username",
 		})
 	}
 
@@ -40,13 +41,13 @@
 	isValid := utils.CheckPasswordHash(loginRequest.Password, user.Password)
 	if !isValid {
 		return ctx.Status(fiber.StatusUnauthorized).JSON(fiber.Map{
-			"message": "wrong credentials",
+			"message": "wrong password",
 		})
 	}
 
 	// GENERATE TOKEN
 	claims := jwt.MapClaims{}
-	claims["name"] = user.Username
+	claims["username"] = user.Username
 	claims["password"] = user.Password
 	claims["exp"] = time.Now().Add(time.Minute * 2).Unix()
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"ALL\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"9887f9c1-1b31-4dd0-9476-46dd5b9fbabd\" name=\"Changes\" comment=\"first commit(bikin auth)\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/controllers/auth.controller.go\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/controllers/auth.controller.go\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Go File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"GOROOT\" url=\"file://C:/Program Files/Go\" />\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2QeJoLwHmO6mZVA5FVgudplW0TP\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/src/logbook_ta&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;project.propVCSSupport.DirectoryMappings&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\src\\logbook_ta\\controllers\" />\r\n      <recent name=\"D:\\src\\logbook_ta\\routes\" />\r\n      <recent name=\"D:\\src\\logbook_ta\\database\" />\r\n      <recent name=\"D:\\src\\logbook_ta\\models\" />\r\n      <recent name=\"D:\\src\\logbook_ta\\app\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\src\\logbook_ta\\models\\response\" />\r\n      <recent name=\"D:\\src\\logbook_ta\\models\\entity\" />\r\n      <recent name=\"D:\\src\\logbook_ta\\models\\request\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"go build logbook_ta\" type=\"GoApplicationRunConfiguration\" factoryName=\"Go Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"logbook_ta\" />\r\n      <working_directory value=\"$PROJECT_DIR$\" />\r\n      <kind value=\"PACKAGE\" />\r\n      <package value=\"logbook_ta\" />\r\n      <directory value=\"$PROJECT_DIR$\" />\r\n      <filePath value=\"$PROJECT_DIR$/main.go\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Go Build.go build logbook_ta\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first commit(bikin auth)\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"first commit(bikin auth)\" />\r\n  </component>\r\n  <component name=\"VgoProject\">\r\n    <settings-migrated>true</settings-migrated>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision af4703cca1d308241a236a8575fdc0f0df56af36)
+++ b/.idea/workspace.xml	(date 1685723067574)
@@ -4,9 +4,11 @@
     <option name="autoReloadType" value="ALL" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="9887f9c1-1b31-4dd0-9476-46dd5b9fbabd" name="Changes" comment="first commit(bikin auth)">
+    <list default="true" id="9887f9c1-1b31-4dd0-9476-46dd5b9fbabd" name="Changes" comment="pisahkan be dan fe">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/controllers/auth.controller.go" beforeDir="false" afterPath="$PROJECT_DIR$/controllers/auth.controller.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/be/controllers/auth.controller.go" beforeDir="false" afterPath="$PROJECT_DIR$/be/controllers/auth.controller.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/be/models/response/user.response.go" beforeDir="false" afterPath="$PROJECT_DIR$/be/models/response/user.response.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/be/go.sum" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -24,6 +26,19 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;
+  }
+}</component>
+  <component name="GithubPullRequestsUISettings">
+    <option name="selectedUrlAndAccountId">
+      <UrlAndAccount>
+        <option name="accountId" value="46b1409c-cea6-417e-916f-96b0ee9cbeed" />
+        <option name="url" value="https://github.com/gitinisial/logbookTugasAkhir.git" />
+      </UrlAndAccount>
+    </option>
+  </component>
   <component name="ProjectId" id="2QeJoLwHmO6mZVA5FVgudplW0TP" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
@@ -40,7 +55,7 @@
     &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
     &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
     &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;D:/src/logbook_ta&quot;,
+    &quot;last_opened_file_path&quot;: &quot;D:/src/logbook_ta/be&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
     &quot;settings.editor.selected.configurable&quot;: &quot;project.propVCSSupport.DirectoryMappings&quot;
@@ -48,13 +63,15 @@
 }</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="D:\src\logbook_ta\be" />
       <recent name="D:\src\logbook_ta\controllers" />
       <recent name="D:\src\logbook_ta\routes" />
       <recent name="D:\src\logbook_ta\database" />
       <recent name="D:\src\logbook_ta\models" />
-      <recent name="D:\src\logbook_ta\app" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
+      <recent name="D:\src\logbook_ta\be" />
+      <recent name="D:\src\logbook_ta" />
       <recent name="D:\src\logbook_ta\models\response" />
       <recent name="D:\src\logbook_ta\models\entity" />
       <recent name="D:\src\logbook_ta\models\request" />
@@ -93,7 +110,8 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="first commit(bikin auth)" />
-    <option name="LAST_COMMIT_MESSAGE" value="first commit(bikin auth)" />
+    <MESSAGE value="pisahkan be dan fe" />
+    <option name="LAST_COMMIT_MESSAGE" value="pisahkan be dan fe" />
   </component>
   <component name="VgoProject">
     <settings-migrated>true</settings-migrated>
Index: be/models/response/user.response.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package response\r\n\r\ntype UserResponse struct {\r\n\tID       uint   `json:\"id\"`\r\n\tName     string `json:\"name\" `\r\n\tUsername string `json:\"username\" `\r\n\tEmail    string `json:\"email\"`\r\n\t// CreatedAt time.Time `json:\"created_at\"`\r\n\t// UpdatedAt time.Time `json:\"updated_at\"`\r\n\t// DeletedAt gorm.DeletedAt `json:\"-\"`\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/be/models/response/user.response.go b/be/models/response/user.response.go
--- a/be/models/response/user.response.go	(revision af4703cca1d308241a236a8575fdc0f0df56af36)
+++ b/be/models/response/user.response.go	(date 1685722282664)
@@ -9,3 +9,7 @@
 	// UpdatedAt time.Time `json:"updated_at"`
 	// DeletedAt gorm.DeletedAt `json:"-"`
 }
+
+func (UserResponse) TableName() string {
+	return "users"
+}
